# syntax=docker/dockerfile:1.6

########## Builder ##########
FROM rust:1.79-bullseye AS builder
WORKDIR /app

# tools untuk tonic_build dan fetch git deps
RUN apt-get update && apt-get install -y --no-install-recommends \
    protobuf-compiler pkg-config libssl-dev ca-certificates git \
 && rm -rf /var/lib/apt/lists/*

# hindari race pada cache cargo
ENV CARGO_HOME=/cargo
ENV CARGO_NET_GIT_FETCH_WITH_CLI=true

# SALIN SELURUH REPO (paling aman)
COPY . .

# Build service (tentukan via build-arg)
ARG SERVICE=services/payments-rs
ARG BIN=""  # kalau kosong, ambil dari package.name

# cache terpisah & locked biar gak saling sikut saat paralel
RUN --mount=type=cache,target=/cargo/registry,sharing=locked \
    --mount=type=cache,target=/cargo/git,sharing=locked \
    --mount=type=cache,target=/app/target,sharing=locked \
    bash -eo pipefail -c '\
      set -euxo pipefail; \
      MANIFEST="$SERVICE/Cargo.toml"; \
      PKG="$BIN"; \
      if [ -z "$PKG" ]; then \
        PKG=$(awk -F= "/^\\s*name\\s*=\\s*/{gsub(/[\x22\\x27 ]/,\"\",\$2); print \$2; exit}" "$MANIFEST"); \
      fi; \
      cargo build --release --manifest-path "$MANIFEST"; \
      install -D -m 0755 "target/release/$PKG" /out/app \
    '

########## Runtime ##########
FROM debian:bookworm-slim
WORKDIR /app
RUN apt-get update && apt-get install -y --no-install-recommends \
      ca-certificates tzdata \
 && rm -rf /var/lib/apt/lists/*
COPY --from=builder /out/app /app/app
EXPOSE 9096 9106
ENTRYPOINT ["/app/app"]

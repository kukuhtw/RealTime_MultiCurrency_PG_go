# syntax=docker/dockerfile:1.6

# ----- Build stage (ONLINE) -----
FROM rust:1.84-bookworm AS builder
WORKDIR /app

# 1) Manifest crate db-rs
COPY services/db-rs/Cargo.toml services/db-rs/Cargo.lock ./services/db-rs/

# 2) Proto (dipakai build.rs)
COPY proto/gen ./proto/gen

# 3) Install protoc
RUN apt-get update && apt-get install -y --no-install-recommends \
      protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*

# 4) Copy source db-rs
COPY services/db-rs ./services/db-rs

# 5) ONLINE compile: berikan DATABASE_URL saat build (via --build-arg)
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}

# Jangan set SQLX_OFFLINE di sini!
# ENV SQLX_OFFLINE=true  <-- HAPUS / JANGAN ADA

# 6) Sanity
RUN command -v protoc && protoc --version && rustc --version

# 7) Build release (sqlx akan konek ke DB pakai DATABASE_URL)
WORKDIR /app/services/db-rs
RUN cargo build --release --locked

# ----- Runtime stage -----
FROM debian:bookworm-slim
WORKDIR /app
RUN apt-get update && apt-get install -y --no-install-recommends \
      ca-certificates tzdata libssl3 \
    && rm -rf /var/lib/apt/lists/*
COPY --from=builder /app/services/db-rs/target/release/db-rs /app/db-rs
ENV RUST_LOG=info
EXPOSE 9095 9105
ENTRYPOINT ["/app/db-rs"]
